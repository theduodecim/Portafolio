//defined variables
$primary-color: rgb(14, 66, 90);
$secondary-color: #eece1e;
$show-home-image: true; // if the show img is true will include the background
// we want not just the image we need the overlay (grey)
$home-image: url(../img/background.jpg);
$background-opacity: 0.6;

//functions
@mixin easeOut {
    //this is how we create a function in SASS is called @mixin
    transition: all 0.5s ease-out; // here we are telling this transition is for all properties
}

@mixin background {
    @if $show-home-image {
        &#bg-img {
            background: $home-image; // here the output will be the var img
            background-attachment: fixed;
            background-size: cover;

            &:after {
                content: ''; // this overlay is inside of the img properties id
                position: absolute; // we want to cover all body
                top: 0;
                right: 0;
                width: 100%;
                height: 100%;
                z-index: -1; // this z-index is the position of the deep of the eyes
                background: rgba($primary-color, $background-opacity); //rgba method takes two parameters to wraped
            }
        }
    }
}

/*
Mixing for the Slider
*/

/*--------------------------------------------------------------
>>> TABLE OF CONTENTS:
----------------------------------------------------------------
1.0 Config
2.0 Translate
--------------------------------------------------------------*/

/*--------------------------------------------------------------
1.0 Transition
--------------------------------------------------------------*/

@mixin default-transition($param: all) {
    transition: $param $normal-transition-time $default-ease;
}

/*--------------------------------------------------------------
2.0 Translate
--------------------------------------------------------------*/

@mixin translateX($value: -50%) {
    transform: translateX($value);
}

@mixin translateY($value: -50%) {
    transform: translateY($value);
}

@mixin translateXY($value: -50%) {
    transform: translate($value, $value);
}


//To return anything inside of SCSS Has to be a function not a Mixing
//So below here will change the color of the fonts if the background is white
//Set Text Color
//Set Text Color 
@function set-text-color($color) {

    // thakes a color
    @if (lightness($color) > 40) {
        //lightness is a constant method
        @return black;
    }

    @else {
        @return #fff;
    }
}

// Media Query Mixins for sizings
@mixin mediaSm {
    @media screen and (max-width: 500px) {
        @content;
    }
}

@mixin mediaMd {
    @media screen and (max-width: 768px) {
        @content;
    }
}

@mixin mediaLg {
    @media screen and (min-width: 769px) and (max-width: 1170px) {
        @content;
    }
}

@mixin mediaXl {
    @media screen and (min-width: 1170px) {
        @content;
    }
}